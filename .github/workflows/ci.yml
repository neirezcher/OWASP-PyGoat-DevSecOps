name: Secure CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
  workflow_dispatch:

jobs:
  setup:
    name: Build & Django Setup
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install system dependencies
        run: sudo apt-get update && sudo apt-get install -y libsqlite3-dev npm

      - name: Install Python dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Django Sanity Check
        run: |
          source venv/bin/activate
          python manage.py check
          python manage.py migrate --noinput

      - name: Run Django Unit Tests
        run: |
          source venv/bin/activate
          python manage.py test --settings=pygoat.settings

  snyk_scan:
    name: Snyk Dependency Scan
    runs-on: ubuntu-latest
    needs: setup
    if: false   # <-- skip for now

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install Python dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install Snyk CLI and Run Scan
        run: |
          source venv/bin/activate
          npm install -g snyk
          snyk test
          snyk monitor
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  sonar_scan:
    name: SonarQube / SonarCloud Scan
    runs-on: ubuntu-latest
    needs: setup
    if: false   # <-- skip for now

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Run SonarQube Scanner
        uses: sonarsource/sonarcloud-github-action@v2
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=OWASP-PyGoat-DevSecOps
            -Dsonar.organization=neirezcher
            -Dsonar.sources=.
            -Dsonar.python.version=3.10

  build_and_dast:
    name: Build Docker Image & Run DAST
    runs-on: ubuntu-latest
    needs: [setup]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create .env file
        run: |
          echo "${{ secrets.DOTENV_FILE }}" | sed 's/ *= */=/g' > .env

      - name: Build Docker Image
        run: docker build -t pygoat:latest .

      - name: Run Django Container
        run: |
          docker run --env-file .env -d --name pygoat_test -p 8000:8000 pygoat:latest
          sleep 20  # give Django time to start
          docker exec pygoat_test python manage.py migrate
      
      - name: Run DAST Scan with OWASP ZAP
        run: |
          docker pull zaproxy/zap-stable:latest
          mkdir -p zap_reports
          docker run --rm -t \
            -v $PWD/zap_reports:/zap/wrk \
            zaproxy/zap-stable:latest zap-baseline.py \
            -t http://host.docker.internal:8000 \
            -r /zap/wrk/zap_report.html \
            -J /zap/wrk/zap_report.json


